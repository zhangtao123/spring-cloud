package com.anji.allways.business.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.anji.allways.business.entity.OrderEntity;
import com.anji.allways.business.vo.HomePageVO;
import com.anji.allways.business.vo.OrderVO;

public interface OrderEntityMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_order
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_order
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int insert(OrderEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_order
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int insertSelective(OrderEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_order
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    OrderEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_order
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int updateByPrimaryKeySelective(OrderEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_order
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int updateByPrimaryKey(OrderEntity record);

    /**
     * 根据条件查询运输单件数(发运)
     * @param Map
     *            <String,Object>
     * @return
     */
    int selectOrderFYByConditionCount(Map<String, Object> map);

    /**
     * 根据条件查询运输单件数(自提)
     * @param Map
     *            <String,Object>
     * @return
     */
    int selectOrderZTByConditionCount(Map<String, Object> map);

    /**
     * 根据条件查询运输单信息（发运）
     * @param Map
     *            <String,Object>
     * @return
     */
    List<OrderEntity> selectOrderListFYByCondition(Map<String, Object> map);

    /**
     * 根据条件查询运输单信息（自提）
     * @param Map
     *            <String,Object>
     * @return
     */
    List<OrderVO> selectOrderListZTByCondition(Map<String, Object> map);

    /**
     * 给所属订单分组
     * @param String
     *            orderIds
     * @return
     */
    List<OrderEntity> selectOrderGroup(List<Long> list);

    /**
     * 更新订单的所属出库计划号（新增出库计划时更新运输单状态信息）（新增出库计划单操作）（更新order）（自提）
     * @param int
     *            id
     * @return
     */
    Integer updateOrderDeliveryPlanId(Map<String, Object> map);

    /**
     * 根据customerId，destination，consigneeId查询订单信息
     * @param int
     *            id
     * @return
     */
    Map<String, Object> selectOrderIdByVehicleId(@Param("vehicleId") int vehicleId);

    /**
     * 更新订单的所属出库计划号（新增出库计划时更新运输单状态信息）（新增出库计划单操作）（更新order）（发运）
     * @param OrderEntity
     *            record
     * @return
     */
    Integer updateOrderDeliveryPlanIdSub(Map<String, Object> map2);

    /**
     * 查询子出库计划下订单列表
     * @param OrderEntity
     *            record
     * @return
     */
    List<OrderVO> selectOrderSubZTByCondition(OrderEntity record);

    /**
     * 查询所有订单是否确认交接
     * @param deliveryId
     * @return
     */
    int selectOrderIdByVehicleIdCount(int deliveryId);

    /**
     * 根据条件查询运输订单个数
     * @param entity
     * @return
     */
    Integer queryOrderByFilersCount(OrderEntity entity);

    /**
     * 根据条件查询运输订单
     * @param entity
     * @return
     */
    List<OrderEntity> queryOrderByFilers(OrderEntity entity);

    /**
     * 根据订单id查询商品车id
     * @param map
     * @return
     */
    List<OrderEntity> selectVehicleId(Map<String, Object> map);

    /**
     * 修改订单状态
     * @param map
     * @return
     */
    int updateOrderStruts(Map<String, Object> map);

    /**
     * 更新收车时间
     * @param map
     * @return
     */
    int updateOrderIncomeTime(Map<String, Object> map);

    /**
     * 修改订单状态
     * @param int
     *            :子出库计划单id
     * @return
     */
    int updateOrderStrutsByDeliveryPlanId(Map<String, Object> map);

    /**
     * 根据计划单id查运单
     * @param int
     *            :子出库计划单id
     * @return
     */
    Integer selectOrderByDeliveryPlanId(Map<String, Object> map);

    /**
     * 根据运单id更新运单状态
     * @param int
     *            :运单id
     * @return
     */
    int updateOrderStrutsOrderId(Map<String, Object> map);

    /**
     * 根据运单获取车辆id
     * @param int
     *            :运单id
     * @return
     */
    OrderEntity selectVehicleIdByOrderId(@Param("id") int id);

    /**
     * 查询导出订单记录
     * @param map
     * @return int
     */
    List<Map<String, Object>> queryOrderRecordsForExportData(Map<String, Object> map);

    /**
     * 编辑操作时根据计划单id更新运单状态
     * @param map
     * @return int
     */
    int updateOrderStrutsForEditInit(Map<String, Object> map);

    List<OrderEntity> selectOrderIds(@Param("deliveryPlanId") int deliveryPlanId);

    int selectCountHandover(@Param("deliveryPlanId") int deliveryPlanId);

    int updateOrderShipNoByPlanId(Map<String, Object> map);

    int updateReceiveTimeByPlanId(Map<String, Object> map);

    int checkOrderIsCancel(Map<String, Object> map);

    /**
     * 查询首页数据
     * @param map
     * @return HomePageVO
     */
    HomePageVO selectHomepageData(Map<String, Object> map);

    List<OrderEntity> selectOrderListByCondition(Map<String, Object> map);
}

package com.anji.allways.business.mapper;

import java.util.List;
import java.util.Map;

import com.anji.allways.business.entity.CustomerEntity;
import com.anji.allways.business.vo.CustomerLevelVO;
import com.anji.allways.business.vo.CustomerVO;
import com.anji.allways.business.vo.DictVO;
import com.anji.allways.business.vo.WarehouseLevelVO;

public interface CustomerEntityMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_customer
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_customer
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int insert(CustomerEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_customer
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int insertSelective(CustomerEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_customer
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    CustomerEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_customer
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int updateByPrimaryKeySelective(CustomerEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_customer
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int updateByPrimaryKey(CustomerEntity record);

    /**
     * 分页查询(编辑库容页面使用)
     * @param bean
     * @return
     */
    List<CustomerVO> queryCustomerInfosForStorage(Map<String, Object> map);

    /**
     * 分页查询记录数(编辑库容页面使用)
     * @param bean
     * @return
     */
    Integer queryCustomerInfosCountForStorage(Map<String, Object> map);

    /**
     * 查询用户信息
     * @param bean
     * @return
     */
    CustomerEntity queryCustomerInfoByUserId(Integer id);

    /**
     * 查询本公司人员信息
     * @param bean
     * @return
     */
    List<CustomerEntity> queryCompanyCustomerByUserId(Integer userId);

    /**
     * 查询本集团人员信息
     * @param bean
     * @return
     */
    List<CustomerEntity> queryGroupCustomerByUserId(Map<String, Object> map);

    /**
     * 查询经销商
     * @param bean
     * @return
     */
    List<WarehouseLevelVO> findLevelDealerByParentId(Integer parentId);

    /**
     * 查询所有有效客户信息
     * @return
     */
    List<CustomerEntity> queryAllCustomer();

    /**
     * 分页查询记录数
     * @param bean
     * @return
     */
    Integer queryCustomerInfosCount(CustomerEntity bean);

    /**
     * 分页查询
     * @param bean
     * @return
     */
    List<CustomerVO> queryCustomerInfos(CustomerEntity bean);

    /**
     * 获取客户等级信息
     * @param map
     *            包含上级客户ID，客户名称
     * @return
     */
    List<CustomerLevelVO> selectCustomerLevelInfor(Map<String, Object> map);

    /**
     * 获取所属集团下拉列表
     * @param map
     */
    List<DictVO> queryGroupForDict(Map<String, Object> map);

    /**
     * 批量激活或停用客户
     * @param map
     * @return
     */
    Integer updateByIdList(Map<String, Object> map);

    /**
     * 校验客户是否存在已入库的入库计划单且未完成的运输订单
     */
    List<String> checkCustomerStatus(Map<String, Object> map);

    /**
     * 根据ID获取客户信息
     * @param id
     *            客户ID
     */
    CustomerVO selectInfoById(Integer id);

    /**
     * 校验字段值是否重复
     * @param value
     *            字段值
     * @param cloumnsName
     *            参数名
     * @return
     */
    Integer checkRepeatValue(Map<String, Object> map);

    /**
     * 根据客户ID更新客户信息
     */
    int updateInfoByID(CustomerEntity record);

    /**
     * 获取所属客户下拉列表
     * @param map
     */
    List<DictVO> queryCustomerForDict(Map<String, Object> map);

    /**
     * 获取仓库下的所有客户公司
     * @param Integer
     */
    List<CustomerEntity> selectCustomerByWarehouse(Integer userId);

    /**
     * 集团查客户
     * @param Integer
     */
    List<Map<String, Object>> selectCustomerByGroupId(Integer userId);

    /**
     * 查询集团名称
     * @param Integer
     */
    String selectGroupNameByUserId(Integer userId);

    /**
     * 查询经销商名称
     * @param Integer
     */
    String selectCustomerNameByUserId(Integer userId);
}

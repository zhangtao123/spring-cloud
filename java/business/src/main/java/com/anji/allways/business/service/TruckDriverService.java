/**
 * anji-allways.com Inc.
 * Copyright (c) 2016-2017 All Rights Reserved.
 */
package com.anji.allways.business.service;

import java.util.List;
import java.util.Map;

import com.anji.allways.business.entity.TruckDriverEntity;
import com.anji.allways.business.vo.TruckDriverVO;

/**
 * 运输司机相关接口
 * @author xuyuyang
 * @version $Id: BerthService.java, v 0.1 2017年8月24日 上午10:41:29 xuyuyang Exp $
 */
public interface TruckDriverService {

    /**
     * 分页查询
     * @param bean
     * @param pageNum
     * @param pageRows
     * @return
     */
    Map<String, Object> queryTruckDriverInfos(TruckDriverEntity bean, Integer pageNum, Integer pageRows);

    /**
     * 批量激活或停用司机
     * @param list
     *            选中记录的IDlist
     * @param userId
     *            操作用户
     * @param status
     *            要更新成的状态(false:停用 true:正常)
     */
    Integer batchUpdateDriver(List<Integer> list, Long userId, Integer status);

    /**
     * 根据ID获取运输司机信息
     * @param ID
     * @return
     */
    TruckDriverVO selectByPrimaryKey(Integer id);

    /**
     * 校验是否存在重复的值
     * @param value
     *            字段值
     * @param cloumnsName
     *            字段名
     * @param id
     * @return
     */
    Integer checkRepeatValue(String value, String cloumnsName, Integer id);

    /**
     * 新增运输司机信息
     * @param transportCompanyEntityMapper
     */
    int addTruckDriverEntityEntity(TruckDriverEntity truckDriverEntity);

    /**
     * 保存编辑后的运输司机信息
     * @param transportCompanyEntityMapper
     */
    int updateTruckDriverEntity(TruckDriverEntity truckDriverEntity);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_transport_company
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     * @return 返回插入记录后的ID
     */
    Integer insert(TruckDriverEntity record);

    /**
     * 根据电话号码查询运输司机（可能存在多条）
     */
    List<TruckDriverVO> selectInfoByMoblie(String mobile);

    /**
     * 校验要启用的司机是否在其他公司为启用状态
     * @param list
     *            选中记录的IDlist
     */
    TruckDriverVO checkOhterCompanyByIdList(List<Integer> list);

    /**
     * 校验选中的司机是否有任务正在进行
     * @param list
     *            选中记录的IDlist
     */
    List<String> checkAllDriver(List<Integer> list);
}

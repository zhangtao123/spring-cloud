package com.anji.allways.business.mapper;

import java.util.List;
import java.util.Map;

import com.anji.allways.business.entity.TruckDriverEntity;
import com.anji.allways.business.vo.TruckDriverVO;

public interface TruckDriverEntityMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_truck_driver
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_truck_driver
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int insert(TruckDriverEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_truck_driver
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int insertSelective(TruckDriverEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_truck_driver
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    TruckDriverVO selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_truck_driver
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int updateByPrimaryKeySelective(TruckDriverEntity record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table tb_truck_driver
     * @mbggenerated Wed Aug 23 17:12:20 CST 2017
     */
    int updateByPrimaryKey(TruckDriverEntity record);

    /**
     * 分页查询
     * @param berth
     * @return
     */
    List<TruckDriverVO> queryTruckDriverInfos(TruckDriverEntity bean);

    /**
     * 分页查询记录数
     * @param berth
     * @return
     */
    Integer queryTruckDriverInfosCount(TruckDriverEntity bean);

    /**
     * 批量激活或停用司机
     * @param berth
     * @return
     */
    Integer updateByIdList(Map<String, Object> map);

    /**
     * 校验字段值是否重复
     * @param record
     * @return
     */
    int checkRepeatValue(Map<String, Object> map);

    /**
     * 根据电话号码查询运输司机（可能存在多条）
     */
    List<TruckDriverVO> selectInfoByMoblie(String mobile);

    /**
     * 校验要启用的司机是否在其他公司为启用状态
     * @param list
     *            选中记录的IDlist
     */
    TruckDriverVO checkOhterCompanyByIdList(Map<String, Object> map);

    /**
     * 编辑司机时，更新信息
     * @param bean
     * @return
     */
    int updateByIDForEditDriver(TruckDriverEntity bean);

    /**
     * 校验选中的司机是否有出库任务正在进行
     * @param list
     *            选中记录的IDlist
     */
    List<String> checkAllDriver(Map<String, Object> map);
}
